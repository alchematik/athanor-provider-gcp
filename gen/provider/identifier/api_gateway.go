// Code generated by athanor-go.
// DO NOT EDIT.

package identifier

import (
	"fmt"

	sdk "github.com/alchematik/athanor-go/sdk/provider/value"
)

type ApiGatewayIdentifier struct {
	GatewayId string
	Location  string
	Project   string
}

func (x ApiGatewayIdentifier) ToValue() sdk.Identifier {
	return sdk.Identifier{
		ResourceType: "api_gateway",
		Value: map[string]any{
			"gateway_id": sdk.ToType[any](x.GatewayId),
			"location":   sdk.ToType[any](x.Location),
			"project":    sdk.ToType[any](x.Project),
		},
	}
}

func (x ApiGatewayIdentifier) ResourceType() string {
	return "api_gateway"
}

func ParseApiGatewayIdentifier(v sdk.Identifier) (ApiGatewayIdentifier, error) {

	m, err := sdk.Map[any](v.Value)
	if err != nil {
		return ApiGatewayIdentifier{}, fmt.Errorf("error parsing api_gateway_identifier: %v", err)
	}

	gateway_id, err := sdk.String(m["gateway_id"])
	if err != nil {
		return ApiGatewayIdentifier{}, fmt.Errorf("error parsing api_gateway_identifier: %v", err)
	}
	location, err := sdk.String(m["location"])
	if err != nil {
		return ApiGatewayIdentifier{}, fmt.Errorf("error parsing api_gateway_identifier: %v", err)
	}
	project, err := sdk.String(m["project"])
	if err != nil {
		return ApiGatewayIdentifier{}, fmt.Errorf("error parsing api_gateway_identifier: %v", err)
	}

	return ApiGatewayIdentifier{
		GatewayId: gateway_id,
		Location:  location,
		Project:   project,
	}, nil
}
