// Code generated by athanor-go.
// DO NOT EDIT.

package identifier

import (
	"fmt"

	sdk "github.com/alchematik/athanor-go/sdk/provider/value"
)

type FunctionIdentifier struct {
	Location string
	Name     string
	Project  string
}

func (x FunctionIdentifier) ToValue() sdk.Identifier {
	return sdk.Identifier{
		ResourceType: "function",
		Value: map[string]any{
			"location": sdk.ToType[any](x.Location),
			"name":     sdk.ToType[any](x.Name),
			"project":  sdk.ToType[any](x.Project),
		},
	}
}

func (x FunctionIdentifier) ResourceType() string {
	return "function"
}

func ParseFunctionIdentifier(v sdk.Identifier) (FunctionIdentifier, error) {

	m, err := sdk.Map[any](v.Value)
	if err != nil {
		return FunctionIdentifier{}, fmt.Errorf("error parsing function_identifier: %v", err)
	}

	location, err := sdk.String(m["location"])
	if err != nil {
		return FunctionIdentifier{}, fmt.Errorf("error parsing function_identifier: %v", err)
	}
	name, err := sdk.String(m["name"])
	if err != nil {
		return FunctionIdentifier{}, fmt.Errorf("error parsing function_identifier: %v", err)
	}
	project, err := sdk.String(m["project"])
	if err != nil {
		return FunctionIdentifier{}, fmt.Errorf("error parsing function_identifier: %v", err)
	}

	return FunctionIdentifier{
		Location: location,
		Name:     name,
		Project:  project,
	}, nil
}
